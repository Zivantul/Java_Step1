public class App {

    public static void main(String[] args) {

/*
1. Задать целочисленный массив, состоящий из элементов 0 и 1. Например: [ 1, 1, 0, 0, 1, 0, 1, 1, 0, 0 ].
    С помощью цикла и условия заменить 0 на 1, 1 на 0;
 */

        int[] arr_1 = new int[]{1, 1, 0, 0, 1, 0, 1, 1, 0, 0};

        for (int i = 0; i < arr_1.length; i++) {
            if (arr_1[i] == 0) {
                arr_1[i] = 1;
            } else {
                arr_1[i] = 0;
            }

            //System.out.println(arr_1[i]);

        }


/*
2. Задать пустой целочисленный массив размером 8. С помощью цикла заполнить его значениями 0 3 6 9 12 15 18 21;
 */

        int[] arr_2 = new int[8];

        for (int i=0; i<arr_2.length; i++) {
            arr_2[i] = i*3;
            //System.out.println(arr_2[i]);
        }

/*
3. Задать массив [ 1, 5, 3, 2, 11, 4, 5, 2, 4, 8, 9, 1 ] пройти по нему циклом, и числа меньшие 6 умножить на 2;
 */
    int [] arr_3 = new int[] {1, 5, 3, 2, 11, 4, 5, 2, 4, 8, 9, 1};

    for (int i = 0; i < arr_3.length; i++) {
        if (arr_3[i] < 6) {
            arr_3[i]=arr_3[i] * 2;
        }
        //System.out.println(arr_3[i]);
    }

/*
4. Создать квадратный двумерный целочисленный массив (количество строк и столбцов одинаковое),
    и с помощью цикла(-ов) заполнить его диагональные элементы единицами;
 */

    int [][] arr_4 = new int[4][4];

    for (int i = 0; i < arr_4.length; i++){
        for (int j = 0; j < arr_4[i].length; j++){
            if (i == j) {
                arr_4[i][j]=1;
                //System.out.println("arr_4[" + i + "] [" + j + "] =" + arr_4[i][j]);
            }
        }

    }

/*
5. ** Задать одномерный массив и найти в нем минимальный и максимальный элементы (без помощи интернета);
 */

    int [] arr_5 = new int[] {1, 5, 0, 4, 3, 7, 1, 9, 2, 3};
    int maxElement = 0;

    for (int i = 0; i < arr_5.length; i++){

        if (arr_5[i] > maxElement){
            maxElement = arr_5[i];
        }
    }
    //System.out.println(maxElement);

/*
6. ** Написать метод, в который передается не пустой одномерный целочисленный массив,
    метод должен вернуть true если в массиве есть место, в котором сумма левой и правой части массива равны.
    Примеры: checkBalance([1, 1, 1, || 2, 1]) → true, checkBalance ([2, 1, 1, 2, 1]) → false,
    checkBalance ([10, || 10]) → true, граница показана символами ||, эти символы в массив не входят.
 */
        int [] arr_6 = new int[] {2,3,1,1,5};
        checkBalance(arr_6);


    }



    // метод для задания 6: возвращает итог сравнения левой и правой части массива
    public static boolean checkBalance (int [] arr_cur) {
        int sumleft=0;
        int sumright=0;
        boolean sumbalance=false;

        for (int i = 0; i < arr_cur.length; i++){
            // обнулить счетчики
            sumleft = 0;
            sumright = 0;

            // считаем сумму левой части
            for (int j = 0; j <= i; j++) {
                sumleft = sumleft + arr_cur[j];
                //System.out.println(arr_cur[j] + ", " + sumleft);
            }

            // считаем сумму правой части
            for (int k = i+1; k < arr_cur.length; k++) {
                sumright = sumright + arr_cur[k];
                //System.out.println(arr_cur[k] + ", " + sumright);
                }

            if (sumleft == sumright) {
                sumbalance = true;
                break;
            }

        }

        return sumbalance;
    }

}




