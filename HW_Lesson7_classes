/*
1. Расширить задачу про котов и тарелки с едой
2. Сделать так, чтобы в тарелке с едой не могло получиться отрицательного количества еды
    (например, в миске 10 еды, а кот пытается покушать 15-20)

3. Каждому коту нужно добавить поле сытость (когда создаем котов, они голодны).
    Если коту удалось покушать (хватило еды), сытость = true

4. Считаем, что если коту мало еды в тарелке, то он ее просто не трогает, то есть не может быть
    наполовину сыт (это сделано для упрощения логики программы)

5. Создать массив котов и тарелку с едой, попросить всех котов покушать из этой тарелки
    и потом вывести информацию о сытости котов в консоль

6. Добавить в тарелку метод, с помощью которого можно было бы добавлять еду в тарелку
*/

public class Cat {
    private String name;
    private int appetite;
    private boolean full;

    public Cat(String name, int appetite, boolean full) {
        this.name = name;
        this.appetite = appetite;
        this.full = full;
    }

    /**
     * кормим кота, если кот голоден изначально (сытость = false)
     * @param pl - объект тарелка, к котрому будем обращаться за едой
     */
    public boolean eat(Plate pl) {

        boolean needAddfood = false;
        if (full) {
            System.out.println("Кот " + name + " и так сытый!");
        } else {

            full = pl.foodEnough(pl.decreaseFood(appetite));;

            if (full) {
                System.out.println("Кот " + name + " наелся: " + full);
            } else {
                System.out.println("Коту " + name + " не хватило еды... Кот - сытый? - " + full);
                needAddfood = true;
            }
        }

        return needAddfood;
    }

    public String getName () {
        return name;
    }

    public int getApp (Plate pl) {
        return (appetite - pl.getPlateFull());
    }

}


class Plate {
    private int food;

    public Plate(int food) {
        this.food = food;
    }

    public void info() {

        System.out.println("Остаток еды в тарелке : " + food);
        System.out.println();
    }


    public int decreaseFood (int n){
        if ((food - n) >= 0) {
            return food -= n;
        } else {
            return -1;
        }
    }

    public boolean foodEnough (int f){
        if (f >=0) {
            return true;
        } else {
            return false;
        }
    }

    public void addFood (int newFood) {
        food += newFood;
        System.out.println("Еды добавлено!");
    }

    public int getPlateFull() {
        return food;
    }
}
